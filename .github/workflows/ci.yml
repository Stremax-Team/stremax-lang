name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight UTC

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add timeout to prevent hanging jobs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      # Skip go mod download since we don't have external dependencies yet
      # If we add dependencies later, we can uncomment this
      # - name: Download dependencies
      #   run: go mod download

      - name: Build
        run: go build -v ./cmd/stremax

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: stremax-binary
          path: ./stremax
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Run unit tests
        run: go test -v ./...

      - name: Run tests with race detection
        run: go test -race -v ./...

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage.out
          retention-days: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run gofmt
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files need formatting:"
            gofmt -l .
            echo "Please run 'gofmt -w .' to fix these issues"
            exit 1
          fi

      - name: Run golint
        run: $(go env GOPATH)/bin/golint -set_exit_status ./...

      - name: Run go vet
        run: go vet ./...

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: stremax-binary
          path: .

      - name: Make binary executable
        run: chmod +x ./stremax

      - name: Run example programs
        run: |
          ./stremax run -file ./examples/simple.sx
          ./stremax run -file ./examples/arithmetic.sx
          ./stremax run -file ./examples/strings.sx
          ./stremax run -file ./examples/conditionals.sx
          ./stremax run -file ./examples/boolean.sx
          ./stremax run -file ./examples/combined.sx

  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Run benchmarks
        run: go test -bench=. -benchmem ./... > benchmark-result.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: ./benchmark-result.txt
          retention-days: 7 